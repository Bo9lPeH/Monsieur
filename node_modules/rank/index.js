const Discord             = require("discord.js");             //библиотека Дискорд
const sql                 = require("sqlite");              //патч на формат sqlite npm install sqlite


const sdr                 = new Discord.Client({disableEveryone: true});     //имя клиент

module.exports = async (sdr, message, args) => {
sql.open("./score.sqlite");  
sdr.on('message', message => {

    sql.get(`SELECT * FROM scores WHERE userId ="${message.author.id}"`).then(row => {
        if (!row) {
          sql.run("INSERT INTO scores (userId, points, level) VALUES (?, ?, ?)", [message.author.id, 1, 0]);
    } else {
          let curLevel = Math.floor(1 * Math.sqrt(row.points + 1));
          if (curLevel > row.level) {
            row.level = curLevel;
            sql.run(`UPDATE scores SET points = ${row.points + 1}, level = ${row.level} WHERE userId = ${message.author.id}`);
            message.reply(`Вы повысили свой уровень до **${curLevel}**!`);
          }
          sql.run(`UPDATE scores SET points = ${row.points + 1} WHERE userId = ${message.author.id}`);
        }
      }).catch(() => {
        console.error;
        sql.run("CREATE TABLE IF NOT EXISTS scores (userId TEXT, points INTEGER, level INTEGER)").then(() => {
          sql.run("INSERT INTO scores (userId, points, level) VALUES (?, ?, ?)", [message.author.id, 1, 0]);
        });
      });
    })
    
}